{"version":3,"file":"static/js/997.b3d259c3.chunk.js","mappings":"4OAWO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACoBC,EAAAA,EAAAA,IAAA,sBAAiC,CAACC,OAAQF,EAAUE,SADxE,uBACKC,EADL,EACKA,KADL,kBAEIA,EAAKC,SAFT,kEATPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAuB,CACnBI,OAAQ,mBACRC,cAAe,0PAEnBL,EAAAA,EAAAA,SAAAA,OAAsB,CAClBM,SAAU,SCLP,I,kBCFP,EAAuB,wBAAvB,EAAoD,sBAApD,EAAiF,wB,SCGpEC,EAAW,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEhBC,GAAWC,EAAAA,EAAAA,MAGjB,OAAQF,EAAOG,OAAS,IAAQ,eAAIC,UAAWC,EAAf,SACKL,EAAOM,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAb,OAAuB,eAAIL,UAAWC,EAAf,UACK,UAAC,KAAD,CAAMK,GAAE,UAAKC,EAAAA,EAAAA,OAAL,YAAqBJ,GAAMK,MAAO,CAACC,KAAMZ,GAAWG,UAAWC,EAAvE,UACKG,EADL,IACaC,MAFUF,EAAnD,KAOnD,E,SChBD,GAAgB,UAAY,yBC2B5B,EAtBa,WAET,MJLkC,WAElC,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqCA,OAnCAC,EAAAA,EAAAA,YAAU,WAEN,IAAM9B,EAAY,IAAI+B,gBAEhBC,EAAS,mCAAG,wGAEVL,GAAa,GAFH,SAGS5B,EAAkBC,GAH3B,OAIU,KADdG,EAHI,QAIDS,QACDiB,EAAS,oDAEXI,EAAY9B,EAAKY,KAAI,YAAgC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOiB,EAAkB,EAAlBA,aACR,MAAO,CACKlB,GAAAA,EACAC,MAAAA,EACAC,KAAM,IAAIiB,KAAKD,GAAcE,cAE5C,IAC7BX,EAAQQ,GAdE,kDAgBN,UAACjC,EAAUE,cAAX,OAAC,EAAkBmC,SACnBR,EAAS,EAAD,IAjBF,yBAoBVF,GAAa,GApBH,6EAAH,qDAyBf,OAFAK,IAEO,WACHhC,EAAUsC,OACb,CAEJ,GAAE,IAEI,CAACd,KAAAA,EAAME,UAAAA,EAAWE,MAAAA,EAC5B,CIrCqCW,GAA1Bf,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,MAEzB,OAAQ,2BACI,8BACI,iBAAKf,UAAU,YAAf,WAEI,eAAIA,UAAWC,EAAAA,MAAf,6BAEGU,EAAKZ,OAAS,IAAM,SAACJ,EAAD,CAAWC,OAAQe,IAExCE,IAAa,SAACc,EAAA,EAAD,IAEbZ,IAAS,uBAAIA,UAMtC,C","sources":["Api/api.js","hooks/useFetchTrandingMovies.jsx","webpack://goit-react-hw-04-images/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-04-images/./src/pages/Home.module.css?8f25","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers={\n    accept: 'application/json',\n    authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MWU5OGVkNjRhOTMyNTViMWE1OGRkYTBjMmQ3ZjgyZCIsIm5iZiI6MTY4ODEzNTI2MS40ODgsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a3L17ajXIWbEuURTA8EQUPauHRGZSTBkQ0zYI6QS9vI',\n}\naxios.defaults.params={\n    language: 'en-US',\n}\n\nexport async function getTrendingMovies (abortCtrl) {\n    const { data } = await axios.get(`/trending/movie/day`, {signal: abortCtrl.signal,});\n    return data.results;\n};\n\n\n","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies} from \"../Api/api\";\n\nexport const useFetchTrendingMovies = () => {\n\n    const [list, setList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(()=>{\n        \n        const abortCtrl = new AbortController();\n\n        const fetchData = async () => {\n            try{\n                setIsLoading(true);\n                const data = await getTrendingMovies(abortCtrl);\n                if (data.length === 0){ \n                        setError(\"Opps! Something went wrong. Try reload the page.\");\n                }\n                const movieList = data.map(({id, title, release_date}) => {\n                                                return {\n                                                            id,\n                                                            title,\n                                                            year: new Date(release_date).getFullYear()\n                                                        }\n                                            });\n                setList(movieList);\n            }catch(err){\n                if (!abortCtrl.signal?.aborted){\n                    setError(err);\n                }\n            }finally{\n                setIsLoading(false);\n            }\n        }\n        fetchData();\n\n        return () => {\n            abortCtrl.abort();\n        }\n\n    }, []);\n\n    return {list, isLoading, error};\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"li\":\"MovieList_li__kXkJl\",\"link\":\"MovieList_link__+cn-g\"};","import {Link, useLocation} from \"react-router-dom\";\nimport { paths } from \"routes\";\nimport css from \"./MovieList.module.css\";\n\nexport const MovieList= ({movies}) => {\n\n    const location = useLocation();\n    // console.log(location);\n    \n    return (movies.length > 0) &&   <ul className={css.list}>\n                                        {movies.map(({id, title, year}) => <li className={css.li} key={id}>\n                                                                                <Link to={`${paths.MOVIES}/${id}`} state={{from: location}} className={css.link}>\n                                                                                    {title} {year}\n                                                                                </Link>\n                                                                           </li>\n                                        )}\n                                    </ul>\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__AHomM\"};","import { useFetchTrendingMovies } from \"hooks/useFetchTrandingMovies\";\nimport { MovieList } from \"../components/MovieList/MovieList\";\nimport { Loader } from \"../components/Loader/Loader\";\nimport css from \"./Home.module.css\";\n\n\nconst Home = () =>  {\n\n    const  {list, isLoading, error} = useFetchTrendingMovies();\n\n    return  <main> \n                <section>\n                    <div className=\"container\">\n\n                        <h1 className={css.title}>Trending movies</h1>\n\n                        { (list.length > 0) && <MovieList movies={list}/> }\n\n                        { isLoading && <Loader/> }\n\n                        { error && <p>{error}</p> }\n                        \n                    </div>\n                </section>\n            </main>\n\n}\n\nexport default Home;"],"names":["getTrendingMovies","abortCtrl","axios","signal","data","results","accept","authorization","language","MovieList","movies","location","useLocation","length","className","css","map","id","title","year","to","paths","state","from","useState","list","setList","isLoading","setIsLoading","error","setError","useEffect","AbortController","fetchData","movieList","release_date","Date","getFullYear","aborted","abort","useFetchTrendingMovies","Loader"],"sourceRoot":""}