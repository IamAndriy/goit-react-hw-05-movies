{"version":3,"file":"static/js/958.9081db95.chunk.js","mappings":"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","sources":["api/movie-api.js","webpack://goit-react-hw-05-movies/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx","pages/Cast.jsx","hooks/useFetchMovieCast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers={\n    accept: 'application/json',\n    authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MWU5OGVkNjRhOTMyNTViMWE1OGRkYTBjMmQ3ZjgyZCIsIm5iZiI6MTY4ODEzNTI2MS40ODgsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a3L17ajXIWbEuURTA8EQUPauHRGZSTBkQ0zYI6QS9vI',\n}\n\n\nasync function getTrendingMovies (abortCtrl) {\n    axios.defaults.params={ language: 'en-US', }\n    const { data } = await axios.get(`/trending/movie/day`, {signal: abortCtrl.signal,});\n    return data.results;\n};\n\nasync function getMoviesByQuery(filter, abortCtrl ) {\n    \n    axios.defaults.params = { query : filter, \n                              include_adult : false,\n                              page : \"1\"\n                            };\n    const { data } = await axios.get(`/search/movie`, {signal: abortCtrl.signal,});\n    return data.results;\n}\n\nasync function getMovieDetails(movie_id, abortCtrl ) {\n    axios.defaults.params={ language: 'en-US', };\n    const {data} = await axios.get(`movie/${movie_id}`, {signal: abortCtrl.signal,});\n    return data;\n}\n\nasync function getMovieCast(movie_id, abortCtrl ) {\n    axios.defaults.params={ language: 'en-US', }\n    const { data } = await axios.get(`movie/${movie_id}/credits`, {signal: abortCtrl.signal,});\n    return data.cast;\n}\n\nasync function getMovieReviews(movie_id, abortCtrl ) {\n    axios.defaults.params={ language: 'en-US', }\n    const { data } = await axios.get(`movie/${movie_id}/reviews`, {signal: abortCtrl.signal,});\n    return data.results;\n}\n\nexport {\n    getTrendingMovies,\n    getMoviesByQuery,\n    getMovieDetails,\n    getMovieCast,\n    getMovieReviews,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castDiv\":\"MovieCast_castDiv__scaVi\",\"ul\":\"MovieCast_ul__1-vnb\",\"li\":\"MovieCast_li__GYLJO\",\"imgDiv\":\"MovieCast_imgDiv__L+CX6\",\"img\":\"MovieCast_img__DPXVB\",\"imgMsg\":\"MovieCast_imgMsg__OczFb\",\"name\":\"MovieCast_name__4tqyW\",\"character\":\"MovieCast_character__ruC7Q\"};","import css from \"./MovieCast.module.css\";\nimport EmptyPhoto from \"../../images/empty_photo.png\";\n\nexport const MovieCast = ({list}) =>{\n\n    return  <div className={css.castDiv} >\n                <ul className={css.ul}>\n                { \n                    list.map(({credit_id, profile_path, name, character}) => {\n\n                        return <li className={css.li} key={credit_id}>\n\n                                <div className={css.imgDiv}>\n                                    <img \n                                        className={css.img}\n                                        src={profile_path ? 'https://image.tmdb.org/t/p/w500'+ profile_path : EmptyPhoto} \n                                        alt={name +'photo'}\n                                        />\n                                </div>\n\n                                <p className={css.name}>Actor: {name || \"Unknown\"}</p>\n                                <p className={css.character}>Character : <span>{character || \"Unknown\" }</span></p>\n\n                            </li>\n                        })\n                }\n                </ul>\n            </div>\n}","import { useFetchMovieCast } from \"hooks/useFetchMovieCast\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { MovieCast } from \"components/MovieCast/MovieCast\";\n\nconst Cast = () => {\n    \n    const {list, isLoading, error} = useFetchMovieCast();\n    \n    return  <>\n                { list.length > 0 && <MovieCast list={list}/> }\n\n                { isLoading && <Loader/> }\n\n                { error && <p className=\"error\">{error}</p> }\n            </>\n}\n\nexport default Cast;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"api/movie-api\";\n\nexport const useFetchMovieCast = () => {\n\n    const [list, setList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId: id} = useParams();\n\n    useEffect(()=>{\n\n        const abortCtrl = new AbortController();\n\n        const fetchData = async () => {\n            try{\n                setIsLoading(true);\n\n                const data = await getMovieCast(id, abortCtrl);\n                if (data.length === 0) { \n                    setError(\"We don't have any cast list for this movie\");\n                }\n                setList(data);\n            }catch(err){\n                if (!abortCtrl.signal?.aborted){\n                    setError(err.message);\n                }\n            }finally{\n                setIsLoading(false);\n            }\n        }\n        fetchData();\n\n        return () => {\n            abortCtrl.abort();\n        }\n\n    }, [id]);\n\n    return {list, isLoading, error};\n}"],"names":["getTrendingMovies","abortCtrl","axios","language","signal","data","results","getMoviesByQuery","filter","query","include_adult","page","getMovieDetails","movie_id","getMovieCast","cast","getMovieReviews","accept","authorization","MovieCast","list","className","css","map","credit_id","profile_path","name","character","src","alt","useState","setList","isLoading","setIsLoading","error","setError","id","useParams","movieId","useEffect","AbortController","fetchData","length","aborted","message","abort","useFetchMovieCast","Loader"],"sourceRoot":""}