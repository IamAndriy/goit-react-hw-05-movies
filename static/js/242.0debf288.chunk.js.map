{"version":3,"file":"static/js/242.0debf288.chunk.js","mappings":"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","sources":["api/movie-api.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","hooks/useFetchTrandingMovies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers={\n    accept: 'application/json',\n    authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MWU5OGVkNjRhOTMyNTViMWE1OGRkYTBjMmQ3ZjgyZCIsIm5iZiI6MTY4ODEzNTI2MS40ODgsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a3L17ajXIWbEuURTA8EQUPauHRGZSTBkQ0zYI6QS9vI',\n}\n\n\nasync function getTrendingMovies (abortCtrl) {\n    axios.defaults.params={ language: 'en-US', }\n    const { data } = await axios.get(`/trending/movie/day`, {signal: abortCtrl.signal,});\n    return data.results;\n};\n\nasync function getMoviesByQuery(filter, abortCtrl ) {\n    \n    axios.defaults.params = { query : filter, \n                              include_adult : false,\n                              page : \"1\"\n                            };\n    const { data } = await axios.get(`/search/movie`, {signal: abortCtrl.signal,});\n    return data.results;\n}\n\nasync function getMovieDetails(movie_id, abortCtrl ) {\n    axios.defaults.params={ language: 'en-US', };\n    const {data} = await axios.get(`movie/${movie_id}`, {signal: abortCtrl.signal,});\n    return data;\n}\n\nasync function getMovieCast(movie_id, abortCtrl ) {\n    axios.defaults.params={ language: 'en-US', }\n    const { data } = await axios.get(`movie/${movie_id}/credits`, {signal: abortCtrl.signal,});\n    return data.cast;\n}\n\nasync function getMovieReviews(movie_id, abortCtrl ) {\n    axios.defaults.params={ language: 'en-US', }\n    const { data } = await axios.get(`movie/${movie_id}/reviews`, {signal: abortCtrl.signal,});\n    return data.results;\n}\n\nexport {\n    getTrendingMovies,\n    getMoviesByQuery,\n    getMovieDetails,\n    getMovieCast,\n    getMovieReviews,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"li\":\"MovieList_li__kXkJl\"};","import {Link, useLocation} from \"react-router-dom\";\nimport { paths } from \"routes\";\nimport css from \"./MovieList.module.css\";\n\nexport const MovieList= ({movies}) => {\n\n    const location = useLocation();\n        \n    return (movies.length > 0) &&   <ul className={css.list}>\n                                        {movies.map(({id, title, year}) => <li className={css.li} key={id}>\n                                                                                <Link to={`${paths.MOVIES}/${id}`} state={{from: location}} className={css.link}>\n                                                                                    {title} {year}\n                                                                                </Link>\n                                                                           </li>\n                                        )}\n                                    </ul>\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useFetchTrendingMovies } from \"hooks/useFetchTrandingMovies\";\nimport { MovieList } from \"../../components/MovieList/MovieList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport css from \"./Home.module.css\";\n\nconst Home = () =>  {\n\n    const  {list, isLoading, error} = useFetchTrendingMovies();\n\n    return  <main> \n                <section>\n                    <div className=\"container\">\n\n                        <h1 className={css.title}>Trending movies</h1>\n\n                        { (list.length > 0) && <MovieList movies={list}/> }\n\n                        { isLoading && <Loader/> }\n\n                        { error && <p className=\"error\">{error}</p> }\n                        \n                    </div>\n                </section>\n            </main>\n\n}\n\nexport default Home;","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"api/movie-api\";\n\nexport const useFetchTrendingMovies = () => {\n\n    const [list, setList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(()=>{\n        \n        const abortCtrl = new AbortController();\n\n        const fetchData = async () => {\n            try{\n                setIsLoading(true);\n                const data = await getTrendingMovies(abortCtrl);\n                if (data.length === 0){ \n                        setError(\"Opps! Something went wrong. Try reload the page.\");\n                }\n                const movieList = data.map(({id, title, release_date}) => {\n                                                return {\n                                                            id,\n                                                            title,\n                                                            year: new Date(release_date).getFullYear()\n                                                        }\n                                            });\n                setList(movieList);\n            }catch(err){\n                if (!abortCtrl.signal?.aborted){\n                    setError(err.message);\n                }\n            }finally{\n                setIsLoading(false);\n            }\n        }\n        fetchData();\n\n        return () => {\n            abortCtrl.abort();\n        }\n\n    }, []);\n\n    return {list, isLoading, error};\n}\n"],"names":["getTrendingMovies","abortCtrl","axios","language","signal","data","results","getMoviesByQuery","filter","query","include_adult","page","getMovieDetails","movie_id","getMovieCast","cast","getMovieReviews","accept","authorization","MovieList","movies","location","useLocation","length","className","css","map","id","title","year","to","paths","state","from","useState","list","setList","isLoading","setIsLoading","error","setError","useEffect","AbortController","fetchData","movieList","release_date","Date","getFullYear","aborted","message","abort","useFetchTrendingMovies","Loader"],"sourceRoot":""}